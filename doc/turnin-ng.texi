\input texinfo   @c -*-texinfo-*-
@set VERSION 0.1~beta1
@set UPDATED 2009-07-09
@setfilename turnin-ng.texi
@settitle GNU Sample @value{VERSION}
@syncodeindex pg cp
@comment %**end of header
@copying
This manual is for Turnin-NG (version @value{VERSION}, @value{UPDATED}).

Copyright @copyright{} 2009 Ryan Kavanagh

@quotation
Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.
@end quotation
@end copying

@dircategory Turnin-NG documentation system
@direntry
* Turnin-NG:  using Turnin-NG
@end direntry

@titlepage
@title Turnin-NG
@subtitle for version @value{VERSION}, @value{UPDATED}
@author Ryan Kavanagh (@email{ryanakca@@kubuntu.org})
@page
@vskip 0pt plus 1filll
@insertcopying
@end titlepage

@contents

@ifnottex
@node Top
@top Turnin-NG

This manual is for Turnin-NG (version @value{VERSION}, @value{UPDATED}).
@end ifnottex

@menu
* Introduction to Turnin-NG::
* turnin::
* project::
* Distributing Turnin-NG::
@end menu


@node Introduction to Turnin-NG::, turnin::, Top, Top
@comment node-name, next, previous, up
@chapter Introduction

Turnin-NG is an assignment submission suite written in Python and comprised of
@command{turnin} and @command{project}.  @command{turnin} permits a student to
submit an assignment to a course. @command{project} permits teaching assistants
(TAs) and professors to manage submitted assignments, making it easier to grade
them.

@node turnin::, project::, Top, Top
@menu
* Intruduction to @command{turnin}:
* Using @command{turnin}:
* Making @command{turnin} easier to use:
@end menu

@node Introduction to @command{turnin}, Using @command{turnin}, turnin::, turnin::
@chapter Introduction to @command{turnin}

@command{turnin} compresses your assignements using the @command{tar} and
@command{gzip} formats before submitting them to be graded. If you feel so
inclined, @command{turnin} can cryptographically sign your assignments using
@command{GnuPG}.

@node Using @command{turnin}, Making @command{turnin} easier to use, Introduction to @command{turnin}, turnin::
@chapter Using @command{turnin}

The author of Turnin-NG strived to make @command{turnin} as easy to use, all
while retaining the functionality of the original @command{turnin} command.

The command line format for turnin is as follows.

@Example
turnin [ -vhl ] [ -p@var{project} ] [ -C@var{config} ] [ -k@var{keyid} ] 
         -c@var{course} @var{files}@dots{}
@endExample

You must provide the course name and a list of files to submit.

@table @samp
@item -v, --verbose
Print a list of submitted files once they have been submitted.

@item -h, --help
Print a help message.

@item -l, --list
Print a list of projects, along with wether or not they are enabled and if the
project is the default project.

@item -p, --project
Set the project to which we'll submit our assignments.

@item -C, --config
Path to an alternate configuration file.

@item -k, --keyid
Cryptographically sign an assignment using @command{gpg}.

@item -c, --course
Set the course to which we'll submit our assignments.

@item files
The files we want to submit
@end table


@node Making @command{turnin} easier to use, project::, turnin::
@chapter Making @command{turnin} easier to use

You can set aliases in your shell's configuration. If you are only in one
course, you could use the following alias:

@Example
alias turnin='turnin -c YOUR_COURSE'
@endExample

If you are in multiple courses, the following aliases may be useful:

@Example
alias turnin-COURSE1='turnin -c COURSE1'
alias turnin-COURSE2='turnin -c COURSE2'
# ...
alias turnin-COURSEX='turnin -c COURSEX'
@endExample

If you want to always sign your assignments before submitting them, you could
use an alias like this one:

@Example
alias turnin='turnin -k E95EDDC9'
@endExample

Just make sure to replace the text in capitals with the appropriate information
and 'E95EDDC9' by your GnuPG key id.

@node Index
@unnumbered Index

@printindex cp

@bye

